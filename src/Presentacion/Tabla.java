/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package Presentacion;

import java.awt.BorderLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Maykol
 */
public class Tabla extends JFrame implements ActionListener {

        private static final long serialVersionUID = 7675022490591504183L;

    private final JTable tabla;
    private final JScrollPane barras;
    private final DefaultTableModel modelo;
    private final JButton boton;
    private final String[] columnas = {"Indice", "Dato"};
    
    /** Creates new form Tabla */
    public Tabla() {
               // Inicializamos los elementos de la interfaz
        tabla = new JTable();
        barras = new JScrollPane(tabla);
        modelo = new DefaultTableModel();
        boton = new JButton("Imprimir datos");

        // Ponemos el nombre de las columnas en el modelo
        modelo.setColumnIdentifiers(columnas);

        // Establecemos el modelo de la tabla
        tabla.setModel(modelo);

        // Agregamos datos a la tabla
        this.agregarDatos();

        // Configuramos la ventana principal
        this.prepararVentana();

        // Agregamos elementos a la interfaz
        this.agregarElementos();

        // Agregamos el manejador de evento al boton
        boton.addActionListener(this);
    }

    /**
     * Agregamos los elementos a la interfaz grafica
     */
    private void agregarElementos() {
        this.getContentPane().add(barras, BorderLayout.CENTER);
        this.getContentPane().add(boton, BorderLayout.SOUTH);
    }

    /**
     * Configuramos la ventana
     */
    private void prepararVentana() {
        this.setTitle("Datos de tabla");
        this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        this.setLayout(new BorderLayout());
    }

    /**
     * Agreamos datos a la tabla
     */
    private void agregarDatos() {
        for (Integer i = 0; i < 100; i++) {
            String mensaje = i + " UNIDADES";

            // Creamos un nuevo renglon para la tabla
            String[] datos = {i.toString(), mensaje};
            // Agregamos los datos a la tabla
            modelo.addRow(datos);
        }
    }

    /**
     * Manejador del evento del boton, al activarse obtiene un dato de la tabla
     * y lo imprime en la consola
     *
     * @param e
     */
    public void actionPerformed(ActionEvent e) {
        // Obtenemos el primer dato del renglon seleccionado
        if (tabla.getSelectedRow() != -1) {
            String codigo = (String) modelo.getValueAt(tabla.getSelectedRow(), 0);

            // Lo imprimimos en pantalla
            System.out.println(codigo);
        } else {
            System.out.println("Seleccione un renglon primero");
        }
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Tabla.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Tabla.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Tabla.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Tabla.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Tabla().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables

}
